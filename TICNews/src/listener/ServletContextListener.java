package listener;

import java.sql.Connection;
import java.sql.Driver;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Enumeration;
import java.util.logging.Logger;


// Descomentar si se se va a usar un Listener para iniciar la conexiï¿½n:
import javax.servlet.ServletContext;
import javax.servlet.ServletContextEvent;
import javax.servlet.annotation.WebListener;

@WebListener
public class ServletContextListener implements javax.servlet.ServletContextListener {


	
	private static final Logger logger = Logger.getLogger(ServletContextListener.class.getName());
	

	public void contextInitialized(ServletContextEvent event) {

		
		logger.info("Creating DB");
		Connection conn = null;
		
		try {
			Class.forName("org.hsqldb.jdbcDriver");
		} catch (ClassNotFoundException e) {

			e.printStackTrace();
		}

		try {

			ServletContext sc = event.getServletContext();
		
//			conn = DriverManager.getConnection("jdbc:hsqldb:file:" + sc.getRealPath("WEB-INF/news/"),"sa","");
			conn = DriverManager.getConnection("jdbc:hsqldb:mem:/localhost/news","sa", "");

			Statement stmt = conn.createStatement();
			
			//Init db schema
			try{
				stmt.executeUpdate("CREATE TABLE IF NOT EXISTS User (ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY,"
						+ "NAME VARCHAR(40) NOT NULL, "
						+ "PASSWORD VARCHAR(40) NOT NULL, "
						+ "EMAIL VARCHAR(50) NOT NULL)" );
				stmt.executeUpdate("CREATE TABLE IF NOT EXISTS News (ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, "
						+ "OWNER INTEGER NOT NULL, "
						+ "DATESTAMP DATE default now,"
						+ "TIMESTAMP TIME default '00:00:00',"
						+ "TITLE VARCHAR(150) NOT NULL, "
						+ "TEXT  VARCHAR(400) NOT NULL, "
						+ "URL  VARCHAR(150) NOT NULL, "
						+ "CATEGORY VARCHAR(20) NOT NULL, "
						+ "LIKES INTEGER default 0, "
						+ "HITS INTEGER default 0, "
						+ "FOREIGN KEY (OWNER) REFERENCES USER(ID) ON DELETE CASCADE)" );
				stmt.executeUpdate("CREATE TABLE IF NOT EXISTS Comment (ID INTEGER GENERATED BY DEFAULT AS IDENTITY(START WITH 0) NOT NULL PRIMARY KEY, "
						+ "OWNER INTEGER NOT NULL, "
						+ "NEWS INTEGER NOT NULL, "
						+ "DATESTAMP DATE default now,"
						+ "TIMESTAMP TIME default '00:00:00',"
						+ "TEXT  VARCHAR(400) NOT NULL, "
						+ "LIKES INTEGER default 0, "
						+ "FOREIGN KEY (OWNER) REFERENCES USER(ID) ON DELETE CASCADE," 
						+ "FOREIGN KEY (NEWS) REFERENCES NEWS(ID) ON DELETE CASCADE)" );
				
				
				
			}catch(SQLException e) {
				e.printStackTrace();
			}
			
			//init data
			stmt.executeUpdate("INSERT INTO User (name, password, email) SELECT 'vader', 'anakin', 'darth.vader@darksideoftheforce.org' FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from User where name='vader')  LIMIT 1");
			stmt.executeUpdate("INSERT INTO User (name, password, email) SELECT 'doe', 'john', 'jdoe@nothing.es' FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from User where name='doe')  LIMIT 1");
			
			
			
			stmt.executeUpdate("INSERT INTO News (owner,title,text,url,category,likes) "
					+ "SELECT 0,'Emperador de EEUU o Rey de Alemania: personajes que se atribuyeron un cargo rimbombante por la cara',"
					+ "'De toda la vida ha habido gente a la que le han dado un cargo de autoridad y lo ha ejercido con orgullo. El poder atrae, y por eso tambien hay quienes, a pesar de no haber recibido cargo alguno, se han autoproclamado sultanes, gobernadores o emperadores de la forma mas extravagante posible.',"
					+ "'http://www.cookingideas.es/by-the-face-20160307.html','ocio',25 "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from News where id=0)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO News (owner,title,text,url,category,likes) "
					+ "SELECT 1,'Un dron de Hacienda descubre 2.500 viviendas ilegales en Menorca',"
					+ "'Un dron de Hacienda descubre 2.500 viviendas irregulares en Menorca, isla verde que es Reserva de la Biosfera desde 1993. La cifra no incluye las posibles irregularidades urbanisticas en los pueblos de Sant Lluis, Mae y Ciutadella, ya que o no se dispone de datos o aun se estan procesando.',"
					+ "'http://www.cronicaglobal.com/es/notices/2016/03/un-dron-de-hacienda-descubre-2.500-viviendas-ilegales-en-menorca-34556.php','actualidad',40 "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from News where id=1)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO News (owner,title,text,url,category,likes) "
					+ "SELECT 0,'Darth Maul - Aprendiz (Un Fan-Film de Star Wars)',"
					+ "'Como la mayoria de los fans de Star Wars, el director de cine con sede en Alemania Shawn Bu penso que Darth Maul, el malo en Star Wars: Episodio I - La Amenaza Fantasma, merecia mas tiempo en pantalla. Para ayudar a solucionar este problema, Shawn y su equipo pasaron casi dos anos la creacion de este cortometraje.',"
					+ "'https://www.youtube.com/watch?v=Djo_91jN3Pk','ocio', 12 "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from News where id=2)  LIMIT 1");
						
			stmt.executeUpdate("INSERT INTO Comment (owner,news,text) "
					+ "SELECT 1,0,'Ha habido cada tio raro con ansias de aparentar' "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from Comment where id=0)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO Comment (owner,news,text) "
					+ "SELECT 0,0,'Ya te digo' "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from Comment where id=1)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO Comment (owner,news,text) "
					+ "SELECT 0,1,'Y los demas pagando todos los permisos...' "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from Comment where id=2)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO Comment (owner,news,text) "
					+ "SELECT 1,1,'Hay gente con mucha cara' "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from Comment where id=3)  LIMIT 1");
			stmt.executeUpdate("INSERT INTO Comment (owner,news,text) "
					+ "SELECT 0,1,'Y tanto' "
					+ "FROM INFORMATION_SCHEMA.TABLES WHERE not exists (select  * from Comment where id=4)  LIMIT 1");
			
			sc.setAttribute("dbConn", conn);
			
		} catch (SQLException e) {

			e.printStackTrace();
		}                     
		
		logger.info("DB created");
		
		//return conn;
	}
	

    public void contextDestroyed(ServletContextEvent arg0)  { 
		
		logger.info("Destroying DB");
		try {
			logger.info("DB shutdown start");

	   		ServletContext sc = arg0.getServletContext();
	   		Connection conn = (Connection) sc.getAttribute("dbConn");
			Statement stmt = conn.createStatement();
			stmt.executeUpdate("SHUTDOWN");
			conn.close();
			Enumeration<Driver> drivers = DriverManager.getDrivers();
			while (drivers.hasMoreElements()) {
				logger.info("DB deregistering drivers");
				Driver driver = drivers.nextElement();
				try {
					DriverManager.deregisterDriver(driver);
					logger.info(String.format("deregistering jdbc driver: %s", driver));
				} catch (SQLException e) {
					logger.severe(String.format("Error deregistering driver %s %s", driver, e));
				}

			}

		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		logger.info("DB destroyed");
	}

	
   
	
	

}
